{"version":3,"file":"component---src-templates-blogsection-js-d4e822d808a6a72f155e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/core-js/modules/es.global-this.js","webpack://gatsby-starter-default/./node_modules/core-js/modules/esnext.global-this.js","webpack://gatsby-starter-default/./node_modules/@styled-icons/material/Timer/Timer.esm.js","webpack://gatsby-starter-default/./node_modules/@styled-icons/octicons/Calendar/Calendar.esm.js","webpack://gatsby-starter-default/./node_modules/@styled-icons/fa-solid/Tag/Tag.esm.js","webpack://gatsby-starter-default/./node_modules/@styled-icons/fa-solid/Tags/Tags.esm.js","webpack://gatsby-starter-default/./src/components/PostMeta/styles.js","webpack://gatsby-starter-default/./src/components/PostMeta/index.js","webpack://gatsby-starter-default/./src/components/PostCard/styles.js","webpack://gatsby-starter-default/./src/components/PostCard/index.js","webpack://gatsby-starter-default/./src/components/PostList/styles.js","webpack://gatsby-starter-default/./src/components/Masonry/styles.js","webpack://gatsby-starter-default/./src/components/Masonry/index.js","webpack://gatsby-starter-default/./src/hooks/useEventListener.js","webpack://gatsby-starter-default/./src/components/PostList/index.js","webpack://gatsby-starter-default/./src/templates/blogsection.js"],"sourcesContent":["var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true, forced: global.globalThis !== global }, {\n  globalThis: global\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.global-this');\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Timer = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61 1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42A8.962 8.962 0 0 0 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a8.994 8.994 0 0 0 7.03-14.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n  }));\n});\nTimer.displayName = 'Timer';\nexport var TimerDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Calendar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 16 16\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4.75 0a.75.75 0 0 1 .75.75V2h5V.75a.75.75 0 0 1 1.5 0V2h1.25c.966 0 1.75.784 1.75 1.75v10.5A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V3.75C1 2.784 1.784 2 2.75 2H4V.75A.75.75 0 0 1 4.75 0zm0 3.5h8.5a.25.25 0 0 1 .25.25V6h-11V3.75a.25.25 0 0 1 .25-.25h2zm-2.25 4v6.75c0 .138.112.25.25.25h10.5a.25.25 0 0 0 .25-.25V7.5h-11z\"\n  }));\n});\nCalendar.displayName = 'Calendar';\nexport var CalendarDimensions = {\n  height: 16,\n  width: 16\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Tag = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 448 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M48 32h149.5c17 0 33.2 6.74 45.2 18.75l176 175.95c25 25 25 65.6 0 90.6L285.3 450.7c-25 25-65.6 25-90.6 0l-175.95-176C6.743 262.7 0 246.5 0 229.5V80c0-26.51 21.49-48 48-48zm64 144c17.7 0 32-14.3 32-32s-14.3-32-32-32c-17.67 0-32 14.3-32 32s14.33 32 32 32z\"\n  }));\n});\nTag.displayName = 'Tag';\nexport var TagDimensions = {\n  height: 512,\n  width: 448\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Tags = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 512 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M472.8 168.4c52.3 53 52.3 138.2 0 191.2l-112 113.3c-9.3 9.4-24.5 9.5-33.9.2-9.5-9.3-9.5-24.5-.2-34l111.9-113.2c33.9-34.3 33.9-89.5 0-123.8L310.9 72.87c-9.4-9.43-9.3-24.62.2-33.94 9.4-9.32 24.6-9.23 33 .2L472.8 168.4zM0 229.5V80c0-26.51 21.49-48 48-48h149.5c17 0 33.2 6.74 45.2 18.75l168 167.95c25 25 25 65.6 0 90.6L277.3 442.7c-25 25-65.6 25-90.6 0l-167.95-168C6.743 262.7 0 246.5 0 229.5zM112 112c-17.67 0-32 14.3-32 32s14.33 32 32 32c17.7 0 32-14.3 32-32s-14.3-32-32-32z\"\n  }));\n});\nTags.displayName = 'Tags';\nexport var TagsDimensions = {\n  height: 512,\n  width: 512\n};","import React, { Fragment } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Tag, Tags } from 'styled-icons/fa-solid'\n\nconst inTitle = css`\n  margin: 1.3em auto;\n  width: max-content;\n  justify-content: center;\n  max-width: 80vw;\n`\n\nexport const Meta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 0.8em;\n  margin: 0.5em 0;\n  > * {\n    display: flex;\n    align-items: center;\n  }\n  > :not(:last-child) {\n    margin-right: 1em;\n  }\n  ${props => props.inTitle && inTitle};\n`\n\nexport const TagList = ({ tags }) => (\n  <span className=\"tags\">\n    <Tags\n      as={tags.length === 1 && Tag}\n      css=\"margin-right: 0.5em; width: 1.1em; min-width: 1.1em;\"\n    />\n    {tags.map((tag, index) => (\n      <Fragment key={tag}>\n        {index > 0 && `, `}\n        {tag}\n      </Fragment>\n    ))}\n  </span>\n)","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Timer } from 'styled-icons/material'\nimport { Calendar } from 'styled-icons/octicons'\nimport { Meta, TagList } from './styles'\n\nconst PostMeta = ({ title, slug, date, timeToRead, tags = [\"dummy\"], inTitle = false }) => (\n  <Meta inTitle={inTitle}>\n    <span>\n      <Calendar size=\"1.2em\" />\n      &ensp;\n      {date}\n    </span>\n    <span>\n      <Timer size=\"1.2em\" />\n      &ensp;\n      {timeToRead} min read\n    </span>\n    <TagList tags={tags} />\n  </Meta>\n)\n\nexport default PostMeta\n\nPostMeta.propTypes = {\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  inTitle: PropTypes.bool,\n}","\n\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\n\nexport const Post = styled.article`\n  background: var(--color-level-one);\n  height: fit-content;\n  width: 100%;\n  display: grid;\n  border-radius: 0.5em;\n  border: 1px solid var(--color-shadow);\n  box-shadow: 2px 2px 3px var(--color-shadow);\n  overflow: hidden;\n  > :not(:first-child) {\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n  //> :last-child {\n  //  margin-bottom: 0.5em;\n  //}\n`\n// height: 100%;\n  \n\n\nexport const Cover = styled(GatsbyImage)`\n  position: absolute  // !important;\n  z-index: -1;\n  height: auto //did nothing\n  width: auto //did nothing\n  object-fit: cover;\n  filter: brightness(0.3) contrast(1.1);\n`\n\n// height: calc(10em + 4vh);\n// height: 100%\n// width: 100%;\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport PostMeta from \"../PostMeta\"\nimport { Post } from \"./styles\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n// A post is a node associated with a blog post\nexport default function PostCard({ node }) {\n  console.log(node)\n  const { fields, frontmatter, timeToRead } = node\n  const { slug } = fields\n  //const slug = 'stub'\n  const { date, title, cover, tags, tldr } = frontmatter\n  const image = getImage(cover?.img)\n\n  return (\n    <Post>\n      <div\n        style={{\n          display: \"grid\",\n          height: \"min-content\",\n        }}\n      >\n        <div\n          style={{\n            gridArea: \"1/1\",\n            position: \"relative\",\n            placeItems: \"center\",\n            display: \"grid\",\n            marginLeft: \"20px\",\n            marginRight: \"20px\",\n          }}\n        >\n          <h3 css=\"margin: 0.8em auto 0.5em;\">\n            <Link to={slug}>{title}</Link>\n          </h3>\n\n          <PostMeta\n            title={title}\n            slug={slug}\n            date={date}\n            tags={tags}\n            timeToRead={timeToRead}\n          />\n          <p>{tldr}</p>\n        </div>\n        <GatsbyImage\n          image={image}\n          imgStyle={{\n            objectFit: \"cover\",\n            //height: \"100%\",\n            //height: \"50% !Important\",\n            //height: \"75%\",\n          }}\n          style={{\n            gridArea: \"1/1\",\n            filter: \"brightness(0.3) contrast(1.1)\",\n            zIndex: \"-1\",\n            //maxHeight: \"250px\",\n            //overflow: \"hidden\",\n            //height: \"50% !Important\",\n            objectFit: \"fill\",\n            height: \"100%\",\n            //width: \"100%\",\n          }}\n        />\n      </div>\n\n      {/* \n        <Cover image={image} />\n    */}\n      {/* \n    <Link to={slug}>\n    <Cover image={image} />\n    </Link>\n*/}\n\n      {/* \n<h3 css=\"margin: 0.8em auto 0.5em;\">\n<Link to={slug}>{title}</Link>\n</h3>\n\n<PostMeta title={title} slug={slug} date={date} timeToRead={timeToRead} />\n<h4>{excerpt}</h4>\n*/}\n    </Post>\n  )\n}\n","// import styled, { css } from 'styled-components'\nimport styled from \"styled-components\"\nimport { Grid } from \"../styles\"\nimport { mediaQueries } from \"../../utils/mediaQueries\"\n\nexport const PostGrid = styled(Grid)`\n  height: max-content;\n  ${mediaQueries.maxPhablet} {\n    grid-column: 3;\n    justify-self: center;\n  }\n  ${mediaQueries.minPhablet} {\n    grid-column: 2/-2;\n  }\n`\n","import styled from \"styled-components\"\n\nexport const MasonryDiv = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${props => props.gap || `1em`};\n`\n\nexport const Col = styled.div`\n  display: grid;\n  grid-gap: ${props => props.gap || `1em`};\n`\n","import React, { useEffect, useRef, useState } from \"react\"\n//import { useEventListener } from \"hooks\"\nimport { useEventListener } from \"../../hooks/useEventListener\"\nimport { Col, MasonryDiv } from \"./styles\"\n\nconst fillCols = (children, cols) => {\n  children.forEach((child, i) => cols[i % cols.length].push(child))\n}\n\nexport default function Masonry({ children, gap, minWidth = 500, ...rest }) {\n  const ref = useRef()\n  const [numCols, setNumCols] = useState(3)\n  const cols = [...Array(numCols)].map(() => [])\n  fillCols(children, cols)\n\n  const resizeHandler = () =>\n    setNumCols(Math.ceil(ref.current.offsetWidth / minWidth))\n  useEffect(resizeHandler, [])\n  useEventListener(`resize`, resizeHandler)\n\n  return (\n    <MasonryDiv ref={ref} gap={gap} {...rest}>\n      {[...Array(numCols)].map((_, index) => (\n        <Col key={index} gap={gap}>\n          {cols[index]}\n        </Col>\n      ))}\n    </MasonryDiv>\n  )\n}\n","import { useEffect, useRef } from \"react\"\n\nexport function useEventListener(eventNames, handler, element = globalThis) {\n  // Create a ref that stores the handler.\n  const savedHandler = useRef()\n  if (!Array.isArray(eventNames)) eventNames = [eventNames]\n\n  // Save handler to ref.current on initial call to useEventListener\n  // and then update ref.current whenever the handler changes.\n  // This allows the second useEffect below to always get the latest\n  // handler without needing to have it in than hooks deps array which\n  // could cause the effect to re-run every render.\n  useEffect(() => (savedHandler.current = handler), [handler])\n\n  useEffect(() => {\n    if (!element.addEventListener) return // element doesn't support a listener, abort.\n\n    // Create event listener that calls handler function stored in ref\n    const listener = event => savedHandler.current(event)\n    for (const e of eventNames) element.addEventListener(e, listener)\n    return () => {\n      for (const e of eventNames) element.removeEventListener(e, listener)\n    }\n  }, [element, eventNames])\n}\n","import React from \"react\"\n// import { Link } from \"gatsby\"\nimport PostCard from \"../PostCard\"\nimport { PostGrid } from \"./styles\"\nimport Masonry from \"../Masonry\"\n\nexport default function PostList({ posts }) {\n  return (\n    /* posts.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link to={node.fields.slug}>\n            <h3>\n              {node.frontmatter.title}\n              {\"  \"}\n            </h3>\n          </Link>\n          <p>{node.frontmatter.date}</p>\n          <p>{node.excerpt}</p>\n        </div>\n      ))\n */\n\n    <Masonry>\n      {posts.edges.map(({ node }) => (\n        <PostCard key={node.fields.slug} node={node} />\n      ))}\n    </Masonry>\n    /* \n    <PostGrid minWidth=\"17em\" maxWidth=\"24em\" gap=\"1.5em\">\n      {posts.edges.map(({ node }) => (\n        <PostCard key={node.fields.slug} node={node} />\n      ))}\n    </PostGrid>\n\n */\n  )\n}\n","import React from \"react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { graphql } from \"gatsby\"\n//import Layout from \"../components/layout\"\nimport PageTitle from \"../components/PageTitle\"\nimport { PageBody } from \"../components/styles\"\n\nimport { getImage } from \"gatsby-plugin-image\"\n\nimport PostList from \"../components/PostList\"\n\nexport default function SectionPageTemplate({ data }) {\n  const { mdx, posts } = data\n  const { frontmatter, body } = mdx\n  const { title, cover } = frontmatter\n  const image = getImage(cover?.img)\n\n  return (\n    <>\n      <PageTitle img={image}>\n        <h1>{title}</h1>\n      </PageTitle>\n      <PageBody>\n        <MDXRenderer>{body}</MDXRenderer>\n\n        <PostList posts={posts} />\n        {/*  \n        {posts.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}>\n              <h3>\n                {node.frontmatter.title}\n                {\"  \"}\n              </h3>\n            </Link>\n            <p>{node.frontmatter.date}</p>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n         */}\n      </PageBody>\n    </>\n  )\n}\n\n// export const query = graphql`\n//   query($slug: String!) {\n//     mdx(fields: { slug: { eq: $slug } }) {\n//       body\n//       frontmatter {\n//           title\n//       }\n//     }\n//   }\n// `\n// future query\nexport const query = graphql`\n  query ($slug: String!, $section: String!) {\n    mdx: mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        cover {\n          img {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n    posts: allMdx(\n      filter: {\n        frontmatter: { type: { eq: \"post\" }, section: { eq: $section } }\n      }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            tldr\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            cover {\n              img {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n            tags\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"names":["$","global","forced","globalThis","Timer","props","ref","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","Calendar","fillRule","Tag","Tags","inTitle","css","Meta","styled","TagList","tags","className","as","length","map","tag","index","Fragment","key","title","slug","date","timeToRead","size","Post","GatsbyImage","PostCard","node","console","log","fields","frontmatter","cover","tldr","image","getImage","img","style","display","height","gridArea","position","placeItems","marginLeft","marginRight","Link","to","G","imgStyle","objectFit","filter","zIndex","Grid","mediaQueries","MasonryDiv","gap","Col","Masonry","children","minWidth","rest","useRef","useState","numCols","setNumCols","cols","Array","forEach","child","i","push","fillCols","resizeHandler","Math","ceil","current","offsetWidth","useEffect","eventNames","handler","element","savedHandler","isArray","addEventListener","listener","event","e","removeEventListener","useEventListener","_","PostList","posts","edges","SectionPageTemplate","data","mdx","body","PageTitle","MDXRenderer"],"sourceRoot":""}