{"componentChunkName":"component---src-templates-post-js","path":"/blog/2021-3-31-rpi-to-ut61e-comms/rpi-to-uni-t-ut61e-comms/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"type\": \"post\",\n  \"section\": \"blog\",\n  \"categories\": [\"electrical\"],\n  \"navTitle\": null,\n  \"title\": \"RPi to UNI-T UT61E Comms\",\n  \"author\": \"Nate\",\n  \"date\": \"2021-03-31T00:00:00.000Z\",\n  \"tags\": [\"electrical\", \"test\", \"tools\"],\n  \"metatags\": null,\n  \"cover\": {\n    \"img\": \"rpi-to-uni-t-ut61e-comms.jpg\"\n  },\n  \"tldr\": \"We setup an RPi to communicate with log from our UNI-T UT61E.  This will allow us to script and automate testing of van electrical components down the road.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"style\", {\n    \"className\": \"grvsc-styles\"\n  }, \"\\n  .grvsc-container {\\n    overflow: auto;\\n    position: relative;\\n    -webkit-overflow-scrolling: touch;\\n    padding-top: 1rem;\\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\\n    padding-bottom: 1rem;\\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\\n    border-radius: 8px;\\n    border-radius: var(--grvsc-border-radius, 8px);\\n    font-feature-settings: normal;\\n    line-height: 1.4;\\n  }\\n  \\n  .grvsc-code {\\n    display: table;\\n  }\\n  \\n  .grvsc-line {\\n    display: table-row;\\n    box-sizing: border-box;\\n    width: 100%;\\n    position: relative;\\n  }\\n  \\n  .grvsc-line > * {\\n    position: relative;\\n  }\\n  \\n  .grvsc-gutter-pad {\\n    display: table-cell;\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  .grvsc-gutter {\\n    display: table-cell;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter::before {\\n    content: attr(data-content);\\n  }\\n  \\n  .grvsc-source {\\n    display: table-cell;\\n    padding-left: 1.5rem;\\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\\n    padding-right: 1.5rem;\\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\\n  }\\n  \\n  .grvsc-source:empty::after {\\n    content: ' ';\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    user-select: none;\\n  }\\n  \\n  .grvsc-gutter + .grvsc-source {\\n    padding-left: 0.75rem;\\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\\n  }\\n  \\n  /* Line transformer styles */\\n  \\n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\\n    content: ' ';\\n    position: absolute;\\n    width: 100%;\\n  }\\n  \\n  .grvsc-line-diff-add::before {\\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\\n  }\\n  \\n  .grvsc-line-diff-del::before {\\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\\n  }\\n  \\n  .grvsc-line-number {\\n    padding: 0 2px;\\n    text-align: right;\\n    opacity: 0.7;\\n  }\\n  \\n  .monokai-dimmed {\\n    background-color: #1e1e1e;\\n    color: #c5c8c6;\\n  }\\n  .monokai-dimmed .grvsc-line-highlighted::before {\\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\\n  }\\n\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TLDR: We setup an RPi to communicate with log from our UNI-T UT61E.  This will allow us to script and automate testing of van electrical components down the road.\")), mdx(\"h3\", null, \"Getting an RPi talking to a UNI-T UT61E\"), mdx(\"p\", null, \"This was super painless once I got the right model of multimeter.  Turns out the UT61E+ is NOT supported by sigrok (and it says so right on the webpage UT61E if you can read).  Note, the model I got came with an RS-232 cable, so I did have to dig out a RS232-USB cable ().   This is all it took:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apt-get install sigrok-cli\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"python3 -m serial.tools.list_ports\")))), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai-dimmed\",\n    \"data-language\": \"\",\n    \"data-index\": \"0\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"grvsc-code\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"/dev/ttyAMA0     \")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"/dev/ttyUSB0\")))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sigrok-cli --driver=uni-t-ut61e-ser:conn=/dev/ttyUSB0 -O analog --samples 5\"))), mdx(\"pre\", {\n    \"className\": \"grvsc-container monokai-dimmed\",\n    \"data-language\": \"\",\n    \"data-index\": \"1\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"grvsc-code\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"P1: 2.421 k\\u03A9 AUTO\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"P1: 2.421 k\\u03A9 AUTO\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"P1: 2.421 k\\u03A9 AUTO\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"P1: 2.421 k\\u03A9 AUTO\")), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"grvsc-line\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"grvsc-source\"\n  }, \"P1: 2.421 k\\u03A9 AUTO\")))), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Woo\")), mdx(\"p\", null, \"For kicks, I went ahead and hooked up the RD6018 and had a script cycle through voltage commands modulo 10 while reading the voltage off the UT61E all via the RPi.  Hello Automated Testing World!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"RPi to UNI-T UT61E Comms","cover":{"img":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/0d2bd0d30b6dff45445a910d34d39d5e/68a6f/rpi-to-uni-t-ut61e-comms.jpg","srcSet":"/static/0d2bd0d30b6dff45445a910d34d39d5e/dfcd4/rpi-to-uni-t-ut61e-comms.jpg 1008w,\n/static/0d2bd0d30b6dff45445a910d34d39d5e/b97c6/rpi-to-uni-t-ut61e-comms.jpg 2016w,\n/static/0d2bd0d30b6dff45445a910d34d39d5e/68a6f/rpi-to-uni-t-ut61e-comms.jpg 4032w","sizes":"(min-width: 4032px) 4032px, 100vw"},"sources":[{"srcSet":"/static/0d2bd0d30b6dff45445a910d34d39d5e/80cfb/rpi-to-uni-t-ut61e-comms.webp 1008w,\n/static/0d2bd0d30b6dff45445a910d34d39d5e/66d80/rpi-to-uni-t-ut61e-comms.webp 2016w,\n/static/0d2bd0d30b6dff45445a910d34d39d5e/5cc0d/rpi-to-uni-t-ut61e-comms.webp 4032w","type":"image/webp","sizes":"(min-width: 4032px) 4032px, 100vw"}]},"width":4032,"height":3024}}}}}}},"pageContext":{"slug":"/blog/2021-3-31-rpi-to-ut61e-comms/rpi-to-uni-t-ut61e-comms/"}},"staticQueryHashes":["2882470331","3528462622","3692595610"]}