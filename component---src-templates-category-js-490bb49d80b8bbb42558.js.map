{"version":3,"file":"component---src-templates-category-js-490bb49d80b8bbb42558.js","mappings":"kPASe,SAASA,EAAqB,GAAW,IAATC,EAAI,EAAJA,KACrCC,EAAsCD,EAAtCC,IAAKC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,mBACfC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KACbC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MACTC,GAAQC,EAAAA,EAAAA,GAASF,aAAK,EAALA,EAAOG,KAM9B,OACE,gCACE,gBAAC,IAAS,CAACA,IAAKF,GACd,0BAAKF,IAEP,gBAAC,KAAQ,KACP,gBAAC,EAAAK,YAAW,KAAEN,GACd,sCACCH,EAASU,MAAMC,KAAI,gBAAGC,EAAI,EAAJA,KAAI,OACzB,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,EAAAC,KAAI,CAACC,GAAIJ,EAAKK,OAAOC,MACpB,0BACGN,EAAKV,YAAYE,MACjB,OAGL,yBAAIQ,EAAKO,SACL,IAER,iDACClB,EAAmBS,MAAMC,KAAI,gBAAGC,EAAI,EAAJA,KAAI,OACnC,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,EAAAC,KAAI,CAACC,GAAIJ,EAAKK,OAAOC,MACpB,0BACGN,EAAKV,YAAYE,MACjB,OAGL,yBAAIQ,EAAKO,SACL,KAKhB,C","sources":["webpack://gatsby-starter-default/./src/templates/category.js"],"sourcesContent":["import React from \"react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { Link, graphql } from \"gatsby\"\n//import Layout from \"../components/layout\"\nimport PageTitle from \"../components/PageTitle\"\nimport { PageBody } from \"../components/styles\"\n\nimport { getImage } from \"gatsby-plugin-image\"\n\nexport default function CategoryPageTemplate({ data }) {\n  const { mdx, articles, deprecatedArticles } = data\n  const { frontmatter, body } = mdx\n  const { title, cover } = frontmatter\n  const image = getImage(cover?.img)\n  //cover.src = cover?.img?.src\n  //cover.alt = cover?.img?.alt\n  //const { articles } = data\n  //console.log(\"printing page context:\")\n  //console.log(JSON.stringify(pageContext))\n  return (\n    <>\n      <PageTitle img={image}>\n        <h1>{title}</h1>\n      </PageTitle>\n      <PageBody>\n        <MDXRenderer>{body}</MDXRenderer>\n        <h1>Articles</h1>\n        {articles.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}>\n              <h3>\n                {node.frontmatter.title}\n                {\"  \"}\n              </h3>\n            </Link>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n        <h1>Deprecated Articles</h1>\n        {deprecatedArticles.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.fields.slug}>\n              <h3>\n                {node.frontmatter.title}\n                {\"  \"}\n              </h3>\n            </Link>\n            <p>{node.excerpt}</p>\n          </div>\n        ))}\n      </PageBody>\n    </>\n  )\n}\n\n// export const query = graphql`\n//   query($slug: String!) {\n//     mdx(fields: { slug: { eq: $slug } }) {\n//       body\n//       frontmatter {\n//           title\n//       }\n//     }\n//   }\n// `\n// future query\nexport const query = graphql`\n  query($slug: String!, $categories: [String!]) {\n    mdx: mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        cover {\n          img {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n    articles: allMdx(\n      filter: {\n        frontmatter: {\n          type: { eq: \"article\" }\n          categories: { in: $categories }\n          metatags: { nin: [\"deprecated\"] }\n        }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          excerpt\n        }\n      }\n    }\n    deprecatedArticles: allMdx(\n      filter: {\n        frontmatter: {\n          type: { eq: \"article\" }\n          categories: { in: $categories }\n          metatags: { in: [\"deprecated\"] }\n        }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"names":["CategoryPageTemplate","data","mdx","articles","deprecatedArticles","frontmatter","body","title","cover","image","getImage","img","MDXRenderer","edges","map","node","key","id","Link","to","fields","slug","excerpt"],"sourceRoot":""}